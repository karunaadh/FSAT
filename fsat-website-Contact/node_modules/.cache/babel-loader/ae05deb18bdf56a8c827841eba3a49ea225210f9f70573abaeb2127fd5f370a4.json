{"ast":null,"code":"var _jsxFileName = \"D:\\\\KARUNA DOCS\\\\fsat-website-Contact\\\\src\\\\components\\\\pages\\\\Contact\\\\CUMailinglist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ContactUs.css';\nimport validateemail from './Emailvalidator.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mailinglist = () => {\n  _s();\n  //name state\n  const [name, setname] = useState('');\n  //email state\n  const [email, setemail] = useState('');\n  //submitted\n  const [submitted, setsubmit] = useState(false);\n  //email validation message\n  const [emailerror, setemailerror] = useState('');\n  //email valid boolean\n  const [emailvalid, setemailvalid] = useState(true);\n\n  //clear input\n  const clearinput = () => {\n    setname('');\n    setemail('');\n    setsubmit(true);\n    setTimeout(() => {\n      setsubmit(false);\n    }, 2000);\n  };\n\n  //delay clearinput() so google form recieves values before clearing\n  function handlesubmit() {\n    setTimeout(clearinput, 200);\n  }\n\n  //update email state and validate email as user types\n  const handleemailchange = event => {\n    setemail(event.target.value);\n\n    //validate email\n    //if email is valid or the value is blank, set valid as true\n    if (validateemail(email) || !email) {\n      setemailvalid(true);\n      setemailerror('');\n    } else {\n      setemailvalid(false);\n      setemailerror('Enter a valid email.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mailinglistheader\",\n      children: \"JOIN OUR MAILING LIST!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      name: \"hidden_iframe\",\n      id: \"hidden_iframe\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"https://docs.google.com/forms/d/e/1FAIpQLSfNo-8mo_VPOqCJWHmQQ2P0oA54qWM5vRe2x1wtYD0bCy1NEQ/formResponse\",\n      method: \"post\",\n      target: \"hidden_iframe\",\n      onSubmit: handlesubmit,\n      className: \"MLformbody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MLforminput\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"entry.2071110365\",\n          value: name,\n          onChange: event => setname(event.target.value),\n          placeholder: \"Full Name*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"entry.1843590837\",\n          value: email,\n          onChange: handleemailchange,\n          placeholder: \"Email*\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MLsubmitbuttonparent\",\n        children:\n        //if email is valid, show submit button, else, don't\n        emailvalid ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"MLsubmitbutton\",\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"submittext\",\n      children: emailerror\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this),\n    //if submitted, display submit button\n    submitted ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"MLsubmittext\",\n      children: \"Thanks for subscribing! Welcome to our community!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Mailinglist, \"imMgEBVslUwoa9Q8H8fMfibzZGk=\");\n_c = Mailinglist;\nexport default Mailinglist;\nvar _c;\n$RefreshReg$(_c, \"Mailinglist\");","map":{"version":3,"names":["React","useState","validateemail","Mailinglist","name","setname","email","setemail","submitted","setsubmit","emailerror","setemailerror","emailvalid","setemailvalid","clearinput","setTimeout","handlesubmit","handleemailchange","event","target","value","display"],"sources":["D:/KARUNA DOCS/fsat-website-Contact/src/components/pages/Contact/CUMailinglist.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ContactUs.css';\r\nimport validateemail from './Emailvalidator.js';\r\n\r\nconst Mailinglist = () => {\r\n  //name state\r\n  const [name, setname] = useState('');\r\n  //email state\r\n  const [email, setemail] = useState('');\r\n  //submitted\r\n  const [submitted, setsubmit] = useState(false);\r\n  //email validation message\r\n  const [emailerror, setemailerror] = useState('');\r\n  //email valid boolean\r\n  const [emailvalid, setemailvalid] = useState(true);\r\n\r\n  //clear input\r\n  const clearinput = () => {\r\n    setname('');\r\n    setemail('');\r\n    setsubmit(true);\r\n    setTimeout(() => {\r\n      setsubmit(false);\r\n    }, 2000);\r\n  };\r\n\r\n  //delay clearinput() so google form recieves values before clearing\r\n  function handlesubmit() {\r\n    setTimeout(clearinput, 200);\r\n  }\r\n\r\n  //update email state and validate email as user types\r\n  const handleemailchange = (event) => {\r\n    setemail(event.target.value);\r\n\r\n    //validate email\r\n    //if email is valid or the value is blank, set valid as true\r\n    if (validateemail(email) || !email) {\r\n      setemailvalid(true);\r\n      setemailerror('');\r\n    } else {\r\n      setemailvalid(false);\r\n      setemailerror('Enter a valid email.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"mailinglistheader\">JOIN OUR MAILING LIST!</h1>\r\n      {/*---------------Hide google form \"submitted\" page-------*/}\r\n      <iframe\r\n        name=\"hidden_iframe\"\r\n        id=\"hidden_iframe\"\r\n        style={{ display: 'none' }}\r\n      ></iframe>\r\n\r\n      {/*--------------Mailing list form---------*/}\r\n      <form\r\n        action=\"https://docs.google.com/forms/d/e/1FAIpQLSfNo-8mo_VPOqCJWHmQQ2P0oA54qWM5vRe2x1wtYD0bCy1NEQ/formResponse\"\r\n        method=\"post\"\r\n        target=\"hidden_iframe\"\r\n        onSubmit={handlesubmit}\r\n        className=\"MLformbody\"\r\n      >\r\n        {/*---------------Form inputs-------------*/}\r\n        <div className=\"MLforminput\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"entry.2071110365\"\r\n            value={name}\r\n            onChange={(event) => setname(event.target.value)}\r\n            placeholder=\"Full Name*\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"entry.1843590837\"\r\n            value={email}\r\n            onChange={handleemailchange}\r\n            placeholder=\"Email*\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/*----------Form submission and submitted message-------*/}\r\n        <div className=\"MLsubmitbuttonparent\">\r\n          {\r\n            //if email is valid, show submit button, else, don't\r\n            emailvalid ? (\r\n              <input className=\"MLsubmitbutton\" type=\"submit\" value=\"Submit\" />\r\n            ) : (\r\n              <div></div>\r\n            )\r\n          }\r\n        </div>\r\n      </form>\r\n      <p className=\"submittext\">{emailerror}</p>\r\n      {\r\n        //if submitted, display submit button\r\n        submitted ? (\r\n          <p className=\"MLsubmittext\">\r\n            Thanks for subscribing! Welcome to our community!\r\n          </p>\r\n        ) : (\r\n          <p></p>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};\r\nexport default Mailinglist;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}